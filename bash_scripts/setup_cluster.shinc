function setup_environment() {
  setup_kubectl
  setup_helm
  terraform_wait_nodes
  setup_cluster
}

function setup_kubectl() {
  log_msg "Setting up kubectl"
  gcloud config set project ${PROJECT_NAME}
  gcloud config set compute/zone ${GCP_REGION}
  gcloud container clusters get-credentials ${CLUSTER_NAME}
  [[ "${?}" -eq 0 ]] && log_msg "kubectl configured with success" || error_exit "kubectl configured with error!!!"
}

function setup_helm() {
  log_msg "Setting up helm"
  kubectl -n kube-system create serviceaccount tiller
  kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
  helm init --service-account tiller
  [[ "${?}" -eq 0 ]] && log_msg "helm configured with success" || error_exit "helm configured with error!!!"
  declare -a TILLER_PODS="$(kubectl --all-namespaces=true get pods | awk '/tiller/{print $3}')"
  declare -i TILLER_RETRIES=${RETRIES}
  while ((TILLER_RETRIES--)); do
    if [[ "${TILLER_PODS//\/*/}" -le 0 ]] ; then
      log_msg "Waiting for tiller pods to be ready ${TILLER_PODS//\/*/}"
      sleep 15s
      declare TILLER_PODS="$(kubectl --all-namespaces=true get pods | awk '/tiller/{print $3}')"
    else
      log_msg "Tiller is running"
      break
    fi
  done
  [[ ${TILLER_RETRIES} -le 0 ]] && error_exit "Tiller is not running"
}

function setup_cluster() {
  log_msg "Creating users"
  kubectl apply -f "${CONFIG_DIR}/dashboard_users.yaml"
}
